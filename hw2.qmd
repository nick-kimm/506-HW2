---
title: "hw2"
author: "Nick Kim"
format:
  html:
    embed-resources: true
---

Link to my GitHub: <https://github.com/nick-kimm/506-HW2>.

## Problem 1: Dice Game

Letâ€™s play a dice game. It costs $2 to play. You roll a single 6-sided die.

-On a roll of 3 or 5, you win twice your roll.
-On any other roll, you lose.

The input and output should be:

Input: The number of dice to roll.
Output: Total winnings

#Part a:
#Version 1: Loop
```{r}
#' Version 1 Dice Game
#'Will implement the Dice Game using a for loop. Every roll is $2, if you roll a 3 or a 5 you earn double
#'what you put in. Otherwise you loose.
#'
#' @param x (number of rolls)
#'
#' @return Total Winnings a/f x number of rolls
play_dice <- function(x){
  winnings <- 0
  for (i in 1:x){
    rolls <- sample(1:6,x,replace=TRUE)
    if (rolls[i]==3 | rolls[i]==5){
      winnings <- winnings + 2
    }
    else{
      winnings <- winnings - 2
    }
  }
  return(winnings)
}

play_dice(10)
```

#Version 2: Vectorized functions in R
```{r}
#' Version 2 Dice Game
#'Samples the random roll for x number of rolls. Next will calculate the winnings by checking if the roll isn't a 3 or a 5 and then multiplying it by -2 as you'll lose that much in this game. Then it'll add it to the rolls that are 3 or a 5 by 4 as you would double the amount you put in ($2). Finally sum over this whole vector to get your total winnings after x rolls
#' @param x 
#'
#' @return Total winnings 
#'
#' @examples rolls = 2 5 2 6 4 2 1 3 5 6
#' winnings = sum(-2 0 -2 -2 -2 -2 -2 0 0 -2 (1st conditionals) + 0 4 0 0 0 0 0 4 4 0 (2nd conditional))
#' winnings = sum(-2 4 -2 -2 -2 -2 -2 4 4 -2)
#' winnings = -2 
play_dice2 <- function(x){
  rolls <- sample(1:6,x,replace=TRUE)
  winnings <- sum((rolls!=3 & rolls!=5)*-2+(rolls==3 | rolls==5)*4)
  return(winnings)
}

play_dice2(10)
```

#Version 3: Table approach
```{r}


```
